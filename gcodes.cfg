[gcode_macro test_access]
gcode:
  RESPOND MSG="Access to Gcode Config file working!"
  
  
#Home only if needed
[gcode_macro G28]
rename_existing: G28.1
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28.1
    {% endif %}

#Bed mesh macro   
[gcode_macro G29]
gcode: 
    M140 S50
    G28.1
    M190 S50
    Z_TILT_ADJUST
    @BEDLEVELVISUALIZER
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=mesh
    M140 S0
    BED_MESH_OUTPUT PGP=0
    G28.1 Z


#Start and end Macros
[gcode_macro START_PRINT]
gcode:  

      #Get Bed and Extruder temperature from Slicer GCode
      {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(195)|float %}
      #Preheat nozzle and bed
      M104 S{EXTRUDER_TEMP} T0                        
      M140 S{BED_TEMP}                                

      #Home
      G28
      Z_TILT_ADJUST
      BED_MESH_PROFILE LOAD=mesh

      #Move up to clean bed
      G1 Y280 Z20 F6000                

      #Heat nozzle and bed
      M190 S{BED_TEMP}                               
      M109 S{EXTRUDER_TEMP} T0                       

      #Precondition extruder
      G92 E0     
      G90
      #Extrude a line at the front of the build plate
      G1 X150 Y1 Z.2 F6000
      G1 X20 Y1 Z.2 E20 F400

      G92 E0            
      G1 Z2.0 F600        
      G1 X15 Z0.2 F600        
      G1 X10 Y5 Z2.0 F600      
      
[gcode_macro END_PRINT]
gcode:
        #Get Printer built volume dimensions
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

        #Fix-up extruder
        G91                                            
        G1 E-2 F2700                                    
        G1 E-1.5 Z0.2 F2400                        
        G1 X5 Y5 F6000                               
        G1 Z10                                     
        G90                                        

        #Present print
        G1 Z{printer.toolhead.position.z + 10} F600
        G1 X{X_MAX / 2} Y{Y_MAX} F6000
        M106 S0                                      
        M104 S0                                       
        M140 S0                                 

        #Disable Steppers
        M84 X Y E 
        



#Pause and resume macros
[pause_resume]
    
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0                                  
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0   
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y0 F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}
    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1                                  
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
        BASE_RESUME                                                                  ; resume print
    {% endif %}



  
#Filament sensor Macros
[filament_switch_sensor switch_sensor]
switch_pin: PC2 # as shown in Figure 2, switch sensor IO is PA0
pause_on_runout: false
runout_gcode:
    RESPOND MSG="Filament runout detected! Pausing print"
    PAUSE # [pause_resume] is required in printer.cfg
insert_gcode:
    RESPOND MSG="Filament replenished, will resume in 60 seconds"
    G4 S60
    RESUME
    
[filament_motion_sensor encoder_sensor]
switch_pin: PA0 # as shown in Figure 2, motion sensor IO is PC2
detection_length: 7 # accuracy of motion sensor 2.88mm
extruder: extruder
pause_on_runout: false
runout_gcode:
    RESPOND MSG="Filament clog detected! Pausing print"
    PAUSE # [pause_resume] is required in printer.cfg
insert_gcode:
    RESPOND MSG="Filament replenished, will resume in 60 seconds"
    G4 S60
    RESUME


#Temporarily set z offset
[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.05 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1


    
#Force Move macros
[force_move]
enable_force_move: true

[gcode_macro UNSAFE_MOVE_X_POS]
description: Move gantry 10mm in X axis
gcode:
    G91
    Set_KINEMATIC_POSITION X=50 Y=50 Z=50
    G0 X10 F500
    M84
    
[gcode_macro UNSAFE_MOVE_X_NEG]
description: Move gantry 10mm in X axis
gcode:
    G91
    Set_KINEMATIC_POSITION X=50 Y=50 Z=50
    G0 X-10 F500
    M84

[gcode_macro UNSAFE_MOVE_Y_POS]
description: Move gantry 10mm in Y axis
gcode:
    G91
   Set_KINEMATIC_POSITION X=50 Y=50 Z=50
    G0 Y10 F500
    M84
    
[gcode_macro UNSAFE_MOVE_Y_NEG]
description: Move gantry 10mm in Y axis
gcode:
    G91
   Set_KINEMATIC_POSITION X=50 Y=50 Z=50
    G0 Y-10 F500
    M84
    
[gcode_macro UNSAFE_MOVE_Z_POS]
description: Move gantry 5mm in Z axis
gcode:
    G91
   Set_KINEMATIC_POSITION X=50 Y=50 Z=50
    G0 Z5 F500
    M84
    
[gcode_macro UNSAFE_MOVE_Z_NEG]
description: Move gantry 5mm in Z axis
gcode:
    G91
   Set_KINEMATIC_POSITION X=50 Y=50 Z=50
    G0 Z-5 F500
    M84
